{"pageProps":{"allPosts":[{"title":"Пробросить VPN+RDP подключение на домашний компьютер: пособие для маленьких и тупых","date":"2021-06-11T19:06:05.108Z","slug":"hamachi-on-chromebooks","author":{"name":"Roman A. Nosov","picture":"https://avatars3.githubusercontent.com/u/21103635?s=120&v=4","url":"https://github.com/JustAddAcid"},"content":"\nТак уж вышло, что бывает нужно с работы/поездки/откуда-то_ещё подключаться к домашнему компьютеру. Например, чтобы показать свой проект на презентации. Или подключиться к локальному сервису, развернутому на машине.\n\nНо что, если ситуация усложняется тем, что ты дурак и купил хромбук вместо нормального устройства?\n\n![Chromebook meme](../public/assets/blog/hamachi-on-chromebooks/chromebooks.jpg)\n\nВыход через оконный проём всегда имеется. И даже есть простой и понятный путь решения задачи: развернуть *l2tp/ipsec* VPN-сервер (например, великолепный [SoftEtherVPN](https://www.softether.org/)) и подключить к нему все необходимые устройства. \n\nБолее того, **именно такая схема** у меня и была раньше. *(Пока я не забывал платить за VDS)*\n\n## Ковальски, варианты!\n\nЕсть максимально **тупой и небезопасный** путь: вытащить из-за **NAT/фаерволов** \"*наружу*\" домашний компьютер и подключать напрямую. Но если комплюхтер на шиндоусе, все мы с вами знаем, с какой скоростью к нему получит доступ кто-нибудь ещё... \n\nКакой-нибудь абстрактный лейтенант *КейДжиБи* спустя несколько секунд сделает из домашнего компьютера хранилище **ц**ентральных **п**роцессоров. И меня же за это набутылит. \n\n## А есть какой-то VPN для бедных?\n\nМне вспомнился легендарный сервис, который знал каждый школьник моего детства. Именно через него играли во всякие доты, контерстрайки, и [убойные дела](https://smallgames.ws/18239-uboijnoe-delo.html) — [Hamachi](https://www.vpn.net/).\n\nС тех пор, как я им в последний раз пользовался, он сильно коммерциализировался и стал ограничивать сети лишь 5-ю устройствами, а за увеличение лимита вымогать деньги. Довольно мерзко, но для личного использования должно хватить. \n\nСуть этой софтины в том, что она *не предоставляет* VPN-сервер в классическом понимании (не пропускает весь шифрованный трафик через себя). А лишь *\"знакомит\"* устройства сети друг с другом, и помогает им поднять **P2P** подключение. Т.е. пинг и скорость подключения будут ровно такими же, как если бы устройства подключались напрямую без дополнительного софта. Но при этом устройства будут продолжать быть глубоко за NAT и быть недоступны для внешних глаз. \n\n## А дальше что?\n\nСоздать аккаунт и свою приватную сеть на [официальном сайте](https://www.vpn.net/) элементарно. Но для меня оставалось загадкой: смогу ли я подключиться к этой сети со своего экзотического хромбука?\n\nНайти клиент под windows не составляет труда. А вот страница скачивания ARM-linux-клиента меня встретила вот таким выбором:\n\n![Выбор клиента под ARM](../public/assets/blog/hamachi-on-chromebooks/hamachi.png)\n\nВо-первых, вы узнаём, что билд под **ARM** до сих пор остаётся в *beta*. Но мы не будем использовать его в *production*, так ведь? :) \n\nВо-вторых, мне предлагают выбрать между **ARMEL** и **ARMHF** версиями. И тут я впервые столкнулся с этими аббревиатурами. \n\n[Быстрым гуглением выяснилось](https://linuxhint.com/about-arm64-armel-armhf/), что **ARMHF** — это процессоры с хардварным обработчиком операций над *floating-point-числами*, а **ARMEL**, соответственно, софтверным. \n\nПоскольку я живу в 2021 году, то выбрал deb-пакет с ARMHF. Но при установке меня ждало следующее испытание:\nустановщик сваливался с ошибкой, где ругался на то, что архитектура ARM64 != ARMHF. \n\n## Що робити? Гуглити!\n\n[Вот тут](https://community.logmein.com/t5/LogMeIn-Hamachi-Discussions/Hamachi-for-ARM-HF-getting-error-167-while-trying-to-connect-to/td-p/138634) нашел возможное решение. Там юзверь смог установить и запустить ARMHF-версию после того, как добавил эту архитектуру в **dpkg** и установил для неё libc6 и libstdc.\n\n```bash\nsudo dpkg —add-architecture armhf\nsudo apt-get update\nsudo apt-get install libc6:armhf\nsudo ln -s /lib/ld-linux-armhf.so.3 /lib/ld-linux.so.3\nsudo apt-get install libstdc++6:armhf\n```\n\nПосле таких танцев с бубном deb-пакет с hamachi успешно устанавливается. Осталось подключиться к созданной ранее сети:\n\n```bash\nsudo /etc/init.d/logmein-hamachi start\nsudo hamachi set-nick chromebook\n# sudo hamachi join %network id% %network password% у меня (как и у того пользователя) не завелось\n# возвращая безымянную ошибку #167 \n# но можно привязать свой аккаунт logmein к этому клиенту. И подключиться к сети через веб-интерфейс\nsudo hamachi attach %почта, используемая при регистрации%\n```\n\nПосле этого в [личном кабинете](https://www.vpn.net/) появится запрос на подключение клиента. Нужно его подтвердить и привязать к сети. На этом любопытная часть закончилась. VPN на хромбуке поднят. Если всё пошло, как и ожидалось — в терминале мы должны видеть примерно следующее:\n\n```bash\nsudo hamachi \n  # version    : 2.1.0.203\n  # pid        : 1150\n  # status     : logged in\n  # client id  : XXX-XXX-XXX\n  # address    : XXX.XXX.XXX.XXX    %ipv6addr%\n  # nickname   : chromebook\n  # lmi account: %your email%\nsudo hamachi list\n#  * [XXX-XXX-XXX]%network name%  capacity: 1/5, subscription type: Free, owner: %your email%\nip addr show\n# >> Появился интерфейс\n#3: ham0: <BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1404 qdisc pfifo_fast state UNKNOWN group default qlen 1000\n```\n\n## На стороне домашнего компьютера\n\nПодключение к Hamachi из-под windows-x64 происходит без каких-либо дополнительных сложностей: просто скачиваем клиент, запускаем, логинимся, радуемся поднятым VPN.\n\n## Поднимаем RDP сервер\n\n### А нахрена?\n\nКонечно, для простого удалённого управления можно воспользоваться **Chrome Remote Desktop**. Но в нём очень куцая функциональность. Например, он не может шарить буфер обмена, файлы и подключенные по USB устройства между компьютерами. А классический RDP делает это элементарно из коробки. \n\nЧто ж. Чтобы включить RDP сервер на PRO* версиях windows, нужно лишь нажать на переключатель в настройках. Но если вы  ~~жадный русский~~ бедный житель страны третьего мира, то внезапно можете обнаружить вот такую заглушку:\n\n![Windows 10 home: try to enable RDP server](../public/assets/blog/hamachi-on-chromebooks/rdp_not_working.png)\n\nПо умолчанию в \"домашние\" сборки Windows не входит RDP сервер. Но есть замечательный проект на гитхабе, который поможет решить проблему: [RDPWrap](https://github.com/stascorp/rdpwrap). Сия шайтан-софтина не очень friendly в установке и у меня завелась только после такого алгоритма действий ([который я подсмотрел здесь](https://github.com/stascorp/rdpwrap/issues/999)):\n\n* Скачал релиз в zip (а не инсталлятор)\n* Добавил папку с распакованными файлами в исключения защитника шиндовс\n\n![Исключение защитника](../public/assets/blog/hamachi-on-chromebooks/exceptions_microsoft_guard.png)\n\n* Запустил install-скрипт\n* Погасил сервис\n* Заменил ini-файл [на тот, что здесь](https://raw.githubusercontent.com/affinityv/INI-RDPWRAP/master/rdpwrap.ini).\n* Запустил сервис\n\n```bash\ninstall.bat\nnet stop termservice\n# Подменил ini-файл в директории C:\\Program Files\\RDP Wrapper\\rdpwrap.ini\nnet start termservice\n```\n* ...\n* PROFIT!\n\n![PROFIT](../public/assets/blog/hamachi-on-chromebooks/profit.jpg)\n\n## Всо\n\nНа этом этапе должно уже всё заработать. Из-под хромбука по RDP можно подключаться через [FreeRDP](https://www.freerdp.com/) клиент, который есть в apt и уже был [описан вот здесь](./remote-workplace-linux).\n\nК остальным поднятым сервисам можно будет \"достучаться\" так же, как если бы компьютеры были в локальной сети. ¯\\\\_(ツ)_/¯\n\n<iframe frameborder=\"0\" style=\"border:none;width:100%;height:180px;\" width=\"100%\" height=\"180\" src=\"https://music.yandex.ru/iframe/#track/76128507/13437222\">Слушайте <a href='https://music.yandex.ru/album/13437222/track/76128507'>Веснянка</a> — <a href='https://music.yandex.ru/artist/4827898'>Go_A</a> на Яндекс.Музыке</iframe>\n\n#linux #танцы_с_бубном #vpn","ogImage":{"url":"/assets/blog/hamachi-on-chromebooks/background.jpg"},"coverImage":"/assets/blog/hamachi-on-chromebooks/background.jpg","issueId":"21","excerpt":"Так уж вышло, что часто бывает нужно с работы/поездки/откуда-то ещё подключаться к домашнему компьютеру. Например, чтобы показать свой проект на презентации. Но что, если ситуация усложняется тем, что ты дурак и купил хромбук вместо нормального устройства?"},{"title":"Авторитарные замашки у проектировщиков интерфейсов TV","date":"2020-09-24T13:20:05.316Z","slug":"authoritarian-tv-interfaces","author":{"name":"Roman A. Nosov","picture":"https://avatars3.githubusercontent.com/u/21103635?s=120&v=4","url":"https://github.com/JustAddAcid"},"content":"\nМинутка признания. Больше всего в этом мире я ненавижу \"неотключаемые опции\". Есть в этом что-то авторитарное. Когда создатель какой-либо системы играет в бога и заявляет: \"Я просто знаю, что вот эта функция нужна будет всегда. И не отвертитесь! Будете жрать говно до конца!\"\n\nИ такое дерьмо проявляется везде: не только в айтишечке, а даже в обычной жизни! Приведу несколько примеров, чтобы вы поняли, о чем я говорю:\n\n### Интернет в ADSL-эпоху\nВот пришел ты в нулевые года к интернет-провайдеру и говоришь: \"Хочу провести себе тырнет по медному проводу аж **5мб/с**, чтобы смотреть ютуб в 480p и орать с демотиваторов.\"\n\nА тебя заставляют выбирать сразу два тарифа: на интернет и на телефон. Доводы: \"Я не хочу домашний телефон, мне мобилки хватает\" — не работают. И приходится соглашаться с требованиями монополиста — Ростелекома, и платить дополнительный прайс за телефон, которым никто и не воспользовался ни разу. \n\n![Ни единого разрыва](../public/assets/blog/authoritarian-tv-interfaces/without_disconnects.jpg)\n\n### Прекрасное пенсионное и медицинское страхование в рашке\nДля этих штук можно спокойно использовать лозунг \"плати и не пользуйся\". Никого абсолютно не волнует, что человек может просто не дожить до пенсии. Или он самостоятельно хочет накопить себе на старость и не доверяет очень невыгодному вкладу под названием \"пенсионный фонд\", который уже много лет не начисляет проценты. Он просто **не может** отказаться от выплат туда.\n\nС медстраховкой аналогичное дерьмо — ты можешь наблюдаться в частных клиниках за свой счет. **НО** ты **ОБЯЗАН** финансировать безумную и отвратительную систему государственных поликлиник. Зачем? Почему я не могу отказаться выплачивать деньги в фонд, при этом не пользуясь государственной медициной? Потому что какой-то дядька давно решил, что эта опция нужна **всем без исключения** и её нельзя отключить.\n\nИ вот мы подходим к самому главному — юзабилити интерфейсов. И я считаю, что за отсутствие \"выключателя\" у основных функций систем пора уже вводить уголовную ответственность ~~хотя, средневековые развлечения с забиванием камнями тоже подойдут~~ .\n\n## Низкий поклон ребяткам из TOSHIBA\n\nЗадаю вам школьную задачку. **Дано:**\n\n1. Ковидо-карантин, когда закрыты все магазины = 1шт.\n2. Обезьяна, уверенная в том, что она может работать из дома = 1шт.\n3. Ноутбук с экраном 1366x768 = 1шт.\n4. В меру старенький LCD-телевизор TOSHIBA 19AV501 со странным разрешением 1440x900 и возможностью законнектиться по HDMI \n\n![TOSHIBA 19AV501](../public/assets/blog/authoritarian-tv-interfaces/toshiba.jpg)\n\n**Вопрос:** за сколько миллисекунд сгорит стул?\n\n## Суть\n\n![Встал вопрос](../public/assets/blog/authoritarian-tv-interfaces/question.jpg)\n\n~~Во времена моей молодости~~ Когда начался карантин, *встал вопрос* о том, как реализовать своё рабочее место на дому. Мощностью железок я толком не был ограничен, т.к. [подключался по RDP](./remote-workplace-linux) к удалённому компьютеру. Но вот с размером экрана ноутбука у меня возникли проблемы: просто физически не помещались нужные окна на крошечный экран, и постоянно переключаться между окнами было чертовски неудобно. \n\nПоэтому, чтобы хоть как-то сгладить ситуацию, я решил оккупировать ~~Польшу~~ телевизор с кухни и подключить его по *HDMI*. Казалось бы, что может пойти не так в этой ситуации? Берем телевизор, кабель и ноутбук и совмещаем. Но как бы не так! \n\nИменно в момент соития моего ноутбука и телевизора я узнал, ~~откуда взялся оптимус прайм~~ что такое \"неотключаемый оверскан\". **Оверскан** — это когда телевизор увеличивает **всю картинку** на +-5% (при том замыливая), а те куски, которые не влезли на экран — просто отбрасывает, словно их и не было. Т.е. он показывает только середину экрана: без нижней панели с часами и шапок окон сверху.\n\nНаверное, при просмотре каких-то телепередач в этом есть смысл, но при работе за компом це пiздец. А в настройках телевизора нет ничего похожего на отключение этого режима. Совсем ничего. И как с этим жить?\n\n## Поиск информации\n\nВооружившись гуглом и шаманским супер-бубном, я принялся искать инфу об этой проблеме. И что вы думаете? Оказывается, что это говно не связано с конкретной моделью телевизоров. Оверскан у **многих** неотключаемый!\n\nВыходит, это не ошибка разработчиков, а какая-то **устоявшаяся практика**. Я уверен, что существует лобби маньяков-проектировщиков интерфейсов, которые наслаждаются страданиями пользователей по всему миру. Казалось бы, что сложного в добавлении переключателя в меню?\n\n![Маньяки-проектировщики интерфейсов](../public/assets/blog/authoritarian-tv-interfaces/maniac.jpg)\n\n## Попытки решения\n\nСразу после подключения *HDMI* к ноутбуку, телевизор даже не рассказывает о том, что его родное разрешение *1440x900*. И пытается запуститься в дефолтном режиме (1920x1080i).\n\n```bash\n# Ответ xrandr\n\nHDMI-1 connected\n   1920x1080i    50.00 +  60.00    59.94  \n   1280x720      60.00    50.00    59.94  \n   1440x576      50.00  \n   1024x768      75.03    70.07    60.00  \n   1440x480      60.00    59.94  \n   800x600       72.19    75.00    60.32  \n   720x576       50.00  \n   720x576i      50.00  \n   720x480       60.00    59.94  \n   720x480i      60.00    59.94  \n   640x480       75.00    72.81    60.00    59.94  \n\n```\n\nПеребрав все режимы из списка, я увидел, что в режиме 640x480 всё-таки оверскан отключается! То есть, телевизор умеет это делать. Но такое разрешение совсем никуда не годится. Будем копать дальше. \n\nА что будет, если ему насильно объявить родное разрешение?\n\n```bash\ncvt 1440 900 60 # получаем данные для создания режима 1440х900 60 кадров в секунду\n\n>> # 1440x900 59.89 Hz (CVT 1.30MA) hsync: 55.93 kHz; pclk: 106.50 MHz\n>> Modeline \"1440x900_60.00\"  106.50  1440 1528 1672 1904  900 903 909 934 -hsync +vsync\n\nxrandr --newmode \"1440x900_60.00\"  106.50  1440 1528 1672 1904  900 903 909 934 -hsync +vsync\n\nxrandr --addmode HDMI-1 1440x900_60.00 # Добавляем созданный режим к этому подключению\nxrandr --output HDMI-1 --mode 1440x900_60.00 # Запускаем\n```\n\nИ... Ничего! Оверскан продолжает работать. Также на форумах нашел рекомендацию выключить стриминг аудио по HDMI. Казалось бы, при чем здесь оверскан? Но можно попробовать:\n\n```bash\nxrandr --output HDMI-1 --set audio force-dvi\n```\n\nИ опять никакого эффекта. Ни в максимально близком \"стандартном\" режиме (1280x720), ни в \"родном\" разрешении.\n\n### Но выход есть! \n~~в окно~~\n\nПокопавшись в интернете и почти-разочаровавшись в этом мире, я наткнулся на [совершенно отвлеченный сайт](https://zoom.cnews.ru/goods_card/item/1758052/toshiba-19av501), на котором собраны характеристики этой модельки телевизора.\n\nИ там были две очень интересные строки: (Естественно, этой информации не было в официальной инструкции. Потому что страдай.)\n\n[![Скриншот с сайта](../public/assets/blog/authoritarian-tv-interfaces/screenshot.png)](../public/assets/blog/authoritarian-tv-interfaces/screenshot.png)\n\nТам есть разделение на *\"Поддерживаемые форматы входного сигнала\"* и *\"Доступные разрешения при подключении к ПК\"*. Так чем же они отличаются? \n\nКак выяснилось методом тыка — **именно стримингом звука**. Если отключить звук командой, указанной выше, и выставить разрешение из списка *\"Доступные разрешения при подключении к ПК\"*, то телевизор автоматически переходит в режим \"монитора\" и начинает отображать картинку в том же размере, как она отправляется с компьютера. \n\nНо, ЧСХ, среди этого списка \"доступных\" разрешений **НЕТ родного**. Так что, полностью от мыла **избавиться не удастся**. Но это уже кое-что. Затаив лёгкую злобу на разработчиков, выбираем максимальное разрешение из доступных.\n\nИтоговый скрипт запуска этого монитора в нормальном режиме выглядит следующим образом:\n\n```bash\n#! /bin/bash\n\nxrandr --output HDMI-1 --set audio force-dvi\nxrandr --newmode \"1360x768_60.00\"   84.75  1360 1432 1568 1776  768 771 781 798 -hsync +vsync\nxrandr --addmode HDMI-1 1360x768_60.00\nxrandr --output HDMI-1 --mode 1360x768_60.00\n```\n\nЯ его не стал вешать на автозапуск, т.к. иногда подключаю другие устройства по HDMI, и у них со стандартными настройками всё в порядке. Не хотелось бы ломать с ними связь. Так что, я запускаю скрипт после подключения конкретно этого телевизора. \n\n## Финал\n\nЯ очень рад, что основные проблемы разрешились и телевизор заработал в приемлемом режиме. Но длительных танцев с бубном можно было бы **избежать**, если бы переключение с режима **\"телевизора\"** на режим **\"монитора\"** (без оверскана) происходило нормально в меню телевизора, а не отключением стриминга аудио по HDMI. (Что характерно, на windows его вообще не выключить.)\n\nА отсутствие родного разрешения экрана в списке \"поддерживаемых\" — это вообще отдельная шутка инженеров над пользователями. Но с ней можно мириться. \n\nВсех благ\n\n<iframe frameborder=\"0\" style=\"border:none;width:100%;height:180px;\" width=\"100%\" height=\"180\" src=\"https://music.yandex.ru/iframe/#track/63801314/10183597\">Слушайте <a href='https://music.yandex.ru/album/10183597/track/63801314'>Тоталитаризм</a> — <a href='https://music.yandex.ru/artist/8896777'>808hardcore</a> на Яндекс.Музыке</iframe>\n\n#linux #танцы_с_бубном","ogImage":{"url":"/assets/blog/authoritarian-tv-interfaces/background.jpg"},"coverImage":"/assets/blog/authoritarian-tv-interfaces/background.jpg","issueId":"15","excerpt":"Делюсь собственной болью использования LCD-телевизора в качестве монитора на карантине"},{"title":"Организуем удалённое рабочее место на машине с linux","date":"2020-06-07T14:15:07.322Z","slug":"remote-workplace-linux","author":{"name":"Roman A. Nosov","picture":"https://avatars3.githubusercontent.com/u/21103635?s=120&v=4","url":"https://github.com/JustAddAcid"},"content":"\nНа фоне эпидемии появилась необходимость в организации удобной удалённой работы на домашнем компьютере с ос *linux* на борту: настроить *rdp* клиент + *skype for business* (*lync*).\n\n### Зачем?\n\nНе все работодатели готовы предоставлять работникам именно *VPN* для доступа к корпоративным сервисам. Лишь открывают RDP-терминал. Видимо, так им кажется безопаснее ¯\\\\_(ツ)_/¯. А также, некоторые вещи физически невозможно развернуть на локальных машинах, так что в некоторых ситуациях протокол удалённых рабочих столов просто необходим.\n\n### Как должно работать в идеале:\n\n1. Нужен настроенный *RDP* клиент с поддержкой *gateways* на linux, который по одному клику открывает рабочий стол удалённой машины.\n2. Нужна возможность созваниваться по skype for business с коллегами без огромных задержек от RDP. В идеале — запуск клиента на локальной машине.\n\n## Добываем себе возможность работать в трусах\n![Удалёнка](../public/assets/blog/remote-workplace-linux/meme.jpg)\n\n\n### RDP\nВ качестве rdp клиента будем использовать *freerdp* — это один из немногих linux rdp клиентов, который поддерживает шлюзы (gateways). Устанавливаем:\n\n```bash\nsudo apt instal freerdp\n``` \nТеперь запускать удалённые rdp-сеансы мы можем с помощью консольной команды **xfreerdp**. С определенными параметрами:\n\nСо всеми доступными параметрами можно [познакомиться (здесь)](https://github.com/FreeRDP/FreeRDP/wiki/CommandLineInterface \"CommandLineInterface\"). Но нас интересуют вполне конкретные:\n\n1. **/f** — fullscreen mode\n2. **/multimon** — поддержка нескольких мониторов\n3. **/rfx** — \"расширенный\" протокол поверх RDP. \n4. (опционально) **/sound:sys:alsa** — включение стриминга звука на локальную машину\n5. **+clipboard** — расшаривание буфера обмена между удалённым рабочим столом и клиентской машиной\n6. **+fonts** — включить сглаживание шрифтов. \n7. **/v** — хост url\n8. **/d** — домен пользователя,\n9. **/u** — пользователь\n10. **/p** — пароль пользователя\n11. **/g** — шлюз url\n12. **/gd** — домен для авторизации на шлюзе\n13. **/gu** — пользователь для авторизации на шлюзе\n14. **/gp** — пароль для авторизации на шлюзе\n\nИтоговый скрипт запуска у нас будет следующим:\n\n```bash\n#! /bin/bash\n\nxfreerdp /v:targetUrl /d:domain /u:username /p:password /g:gateway /gd:domain /gu:username /gp:password /f /multimon /rfx /sound:sys:alsa +clipboard +fonts\n```\nВсё это можно сохранить в текстовом файле, сделать его исполняемым и положить для удобства на рабочий стол.\n\n```bash\nsudo chmod +x filename # Сделать исполняемым\n```\n\n### Skype for business (lync)\n\nНесмотря на то, что порт обычной (не бизнесовой) версии скайпа  на линукс официально поставляется разработчиками — бизнесовой версии под linux **нет**. Браузерная версия Skype (*Skype web app*) тоже не заведется, т.к. для его функционирования нужно нативное windows-расширение для браузера. Как быть?\n\nВ этом нам поможет прекрасный плагин для мессенджеров — [SIPE](https://sipe.sourceforge.io/ \"A third-party Pidgin plugin for Microsoft LCS/OCS\"). Он позиционирует себя как open-source имплементация протокола OCS, по которому общаются клиенты *Skype for business*.\n\nУстановим pidgin + sipe\n\n```bash\nsudo apt install pidgin pidgin-sipe\n```\n\nПри создании учетных записей выбираем протокол \"Office Communicator\"\n![Pidgin protocols list](../public/assets/blog/remote-workplace-linux/pidgin-protocols.png)\n\nВводим active directory login/e-mail/пароль. И вуаля! Подключается и работает.\n\nПоскольку, это не официальный клиент, многие (не основные) функции могут отсутствовать. Но базовых более чем хватает:\n\n1. Чат\n2. Звонки, как приватные, так и конференции. \n3. Демонстрация рабочего стола\n4. Совместное использование рабочего стола\n\n#linux #танцы_с_бубном #офисная_боль ","ogImage":{"url":"/assets/blog/remote-workplace-linux/logo.jpg"},"coverImage":"/assets/blog/remote-workplace-linux/logo.jpg","issueId":"9","excerpt":"На фоне эпидемии появилась необходимость в организации удобной удалённой работы на домашнем компьютере с ос linux на борту: настроить нормальный rdp клиент + skype for business (lync)"}],"tag":"linux"},"__N_SSG":true}