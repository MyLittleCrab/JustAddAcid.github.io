{"pageProps":{"post":{"title":"Подключаем сторонние шрифты с иконками к SAPUI5-приложению","date":"2020-09-26T17:08:30.259Z","slug":"sapui5-connect-icons-font","author":{"name":"Roman A. Nosov","picture":"https://avatars3.githubusercontent.com/u/21103635?s=120&v=4","url":"https://github.com/JustAddAcid"},"content":"<p>Привет, мои маленькие любители лёгкого <em>БДСМ</em>. В эфире передача \"веселые истории с <em>SAPUI5</em>\". И сегодня мы рассмотрим, какие шаги нужно проделать, чтобы подключить шрифт с нужными нам иконками и использовать их при построении интерфейса. Тому що список стандартных иконок очень куцый, и иногда нужно добавить что-нибудь со стороны.</p>\n<p>Как и всегда это бывает в айтишечке, мы можем решить эту задачу целыми <em>двумя</em> способами:</p>\n<p><strong>Первый</strong> — найти нормальную работу, и не маяться ерундой.</p>\n<p><img src=\"../assets/blog/sapui5-connect-icons-font/work_meme.jpg\" alt=\"Нормальная работа\"></p>\n<p><strong>Второй</strong> (сложнее, но не сильно) — описан ниже.</p>\n<h2>Немного теории</h2>\n<p>На <a href=\"https://sapui5.hana.ondemand.com/#/entity/sap.ui.core.Icon/sample/sap.ui.core.sample.Icon\">официальном демо-примере</a> можем посмотреть как работают нативные иконки в этом фреймворке. </p>\n<p>С точки зрения кода, иконки представлены классом sap.ui.core.<strong>Icon</strong>, остальные элементы экрана, в которых есть иконки, либо расширяют этот класс, либо содержат его внутри себя. Его конструктор принимает следующие основные аргументы:</p>\n<pre><code class=\"language-xml\">&#x3C;core:Icon\n  src=\"sap-icon://syringe\" путь до иконки с протоколом sap-icon\n  color=\"#031E48\" > цвет\n&#x3C;/core:Icon>\n</code></pre>\n<p>И всё это чудо преобразовывается в следующую конструкцию при запуске:</p>\n<pre><code class=\"language-html\">&#x3C;span \n  role=\"presentation\" \n  aria-hidden=\"true\" \n  aria-label=\"syringe\" \n  data-sap-ui-icon-content=\"\" \n  class=\"sapUiIcon sapUiIconMirrorInRTL\" \n  style=\"font-family: 'SAP\\2dicons'; color: #031E48;\">\n  ::before\n&#x3C;/span>\n</code></pre>\n<p><em>SPAN</em>, в котором в аттрибуте style явно объявлен нативный шрифт с иконками, и цвет, заданный в XML-конструкторе. Сам символ иконки лежит в аттрибуте <em>data-sap-ui-icon-content</em>, который с помощью <em>css</em> подставляется внутрь псеводэлемента <em>::before</em>:</p>\n<pre><code class=\"language-css\">.sapUiIcon::before{\n  content: attr(data-sap-ui-icon-content);\n  speak: none;\n  font-weight: normal;\n}\n</code></pre>\n<p>Зачем я это написал? Непонятно, т.к. в этой информации нет ничего полезного. </p>\n<p><img src=\"../assets/blog/sapui5-connect-icons-font/%D0%B4%D0%BB%D1%8F%20%D0%BE%D0%B1%D1%89%D0%B5%D0%B3%D0%BE%20%D1%80%D0%B0%D0%B7%D0%B2%D0%B8%D1%82%D0%B8%D1%8F.jpg\" alt=\"Для общего развития\"></p>\n<p>Первым делом делаем что? Праавильно! <a href=\"https://help.sap.com/saphelp_uiaddon10/helpdata/en/21/ea0ea94614480d9a910b2e93431291/content.htm?no_cache=true\">Лезем в доку</a>, где индусским по белому написано, что для использования кастомных шрифтов иконок нужно сделать несколько очень простых телодвижений:</p>\n<ol>\n<li>Объявить <em>font-face</em> с нашими шрифтами в <em>css</em></li>\n<li><strong>Каждую</strong> иконку, которую мы хотим использовать, нужно объявить с помощью метода sap.ui.core.IconPool.<strong>addIcon</strong>(iconName, collectionName, fontFamily, content)</li>\n<li>Ссылаться в на объявленные иконки во всех местах, где очень чешется по следующему принципу: <strong>sap-icon</strong>://[<strong>collection-name</strong>]/[<strong>icon-name</strong>]</li>\n</ol>\n<p>На этом можно было заканчивать, но давайте пример.</p>\n<h2>Пример</h2>\n<p>Для начала нам нужен какой-нибудь шрифт с иконками. Можно запаковать любые свои векторные изображения в шрифт, если очень хочется. Благо, для этого существует бесконечное количество утилит. Гуглите. </p>\n<p>Я для примера буду пользовать готовую сборку иконок от <a href=\"https://fontawesome.com\">fontawesome</a>. Залезаем, качаем архив с исходниками. В бесплатной версии нам доступны только шрифты: <strong>brands</strong>, <strong>regular</strong>, <strong>solid</strong>.</p>\n<p>В директории <em>/webfonts</em> собраны эти три шрифта в разных форматах. (Чтобы покрыть все популярные браузеры) -> Копируем эту директорию в корень нашего проекта. </p>\n<p>Далее, идем по официальной инструкции:</p>\n<p>Чтобы объявить шрифты из <em>fontawesome</em> нужно с каждым из его шрифтов провернуть следующее:</p>\n<p> <strong>Лезем в css проекта</strong>.</p>\n<ol>\n<li>Если нет .css файлов — создаём и объявляем его в manifest.json.\nПуть объявления в манифесте:<pre><code class=\"language-JavaScript\">{\n  \"sap.ui5\": {\n    \"resources\": {\n      \"css\": [\n        {\n          \"uri\": \"css/yourfilename.css\"\n        }\n      ]\n    }\n  }\n}\n</code></pre></li>\n<li><strong>Смотрим в файл</strong> fontawesome/%fontname%.css</li>\n<li><strong>Копируем блок</strong> <strong>@font-face</strong>, в <em>css</em> проекта. Который будет примерно следующим:<pre><code class=\"language-css\">@font-face {\n  font-family: 'Font Awesome 5 Free';\n  font-style: normal;\n  font-weight: 900;\n  font-display: block;\n  src: url(\"../webfonts/fa-solid-900.eot\");\n  src: url(\"../webfonts/fa-solid-900.eot?#iefix\") format(\"embedded-opentype\"), url(\"../webfonts/fa-solid-900.woff2\") format(\"woff2\"), url(\"../webfonts/fa-solid-900.woff\") format(\"woff\"), url(\"../webfonts/fa-solid-900.ttf\") format(\"truetype\"), url(\"../webfonts/fa-solid-900.svg#fontawesome\") format(\"svg\"); }\n</code></pre></li>\n<li>Где-нибудь в коде (например, при инициализации Component.js, и <em>желательно</em> в отдельном файле) добавляем нужные нам иконки в пул:<pre><code class=\"language-JavaScript\">sap.ui.core.IconPool.addIcon(\"angry\", \"fa\", \"Font Awesome 5 Free\", \"f556\");\nsap.ui.core.IconPool.addIcon(\"gem\", \"fa\", \"Font Awesome 5 Free\", \"f3a5\");\n//...\n</code></pre>(Названия иконок и их символьные коды можно <a href=\"https://fontawesome.com/icons/gem?style=regular\">подсмотреть на сайте</a>.)\n</li>\n<li>Используем иконки при декларации каких-нибудь элементов экрана:<pre><code class=\"language-xml\">&#x3C;Button text=\"Очень красивая кнопка\"\n    icon=\"sap-icon://fa/gem\" />\n</code></pre></li>\n</ol>\n<p><img src=\"../assets/blog/sapui5-connect-icons-font/beautiful_button.jpg\" alt=\"Очень красивая кнопка\"></p>\n<p>Кстати, названия всех иконок и их кодов удобно лежат в файле <strong>/scss/_variables.scss</strong>. И они вполне пригодны для автоматической обработки. Ну а шо, а вдруг.</p>\n<iframe width=\"100%\" height=\"315\" src=\"https://www.youtube-nocookie.com/embed/TeXk3RFy1rc\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n<pre><code class=\"language-scss\">// помимо других переменных, там содержатся $fa-var.* : code\n$fa-var-angry: \\f556;\n$fa-var-angrycreative: \\f36e;\n$fa-var-angular: \\f420;\n$fa-var-ankh: \\f644;\n$fa-var-app-store: \\f36f;\n//.......\n</code></pre>\n<p>Например, можно автоматически собрать все команды добавления в пул. (Не пытайтесь засунуть всю портянку в проект, это просто пример.)</p>\n<pre><code class=\"language-bash\">grep -o fa-var.* ./_variables.scss \\\n | tr --delete \\;\\\\ | awk -F': ' \\\n '{print \"sap.ui.core.IconPool.addIcon(\\\"\"$1\"\\\",\\\"fa\\\",\\\"Font Awesome 5 Free\\\", \\\"\"$2\"\\\");\"}' \\\n > iconDefinition.js\n</code></pre>\n<p>Получим на выходе вот это:</p>\n<pre><code class=\"language-JavaScript\">sap.ui.core.IconPool.addIcon(\"fa-var-address-card\",\"fa\",\"Font Awesome 5 Free\", \"f2bb\");\nsap.ui.core.IconPool.addIcon(\"fa-var-adjust\",\"fa\",\"Font Awesome 5 Free\", \"f042\");\nsap.ui.core.IconPool.addIcon(\"fa-var-adn\",\"fa\",\"Font Awesome 5 Free\", \"f170\");\nsap.ui.core.IconPool.addIcon(\"fa-var-adobe\",\"fa\",\"Font Awesome 5 Free\", \"f778\");\n//...\n</code></pre>\n<p>Целый лонгрид о подключении шрифта... Ух.</p>\n<p><img src=\"../assets/blog/sapui5-connect-icons-font/%D0%B4%D0%B5%D0%B3%D1%80%D0%B0%D0%B4%D0%B0%D1%86%D0%B8%D1%8F.jpg\" alt=\"Деградация\"></p>\n<p>На этом всё. Работает. </p>\n<p>P.S. При тестировании внутри <strong>SAP WEB IDE</strong> на <strong>Internet Explorer</strong> могут наблюдаться фантомные проблемы с отображением иконок. Но после деплоя — всё работает.</p>\n<p><a href=\"/tags/javascript\">#javascript</a> <a href=\"/tags/sapui5\">#sapui5</a> </p>\n","ogImage":{"url":"/assets/blog/sapui5-connect-icons-font/background.jpg"},"coverImage":"/assets/blog/sapui5-connect-icons-font/background.jpg","issueId":"17"}},"__N_SSG":true}