{"pageProps":{"post":{"title":"Экспорт данных из SAP Query-отчета во внутреннюю таблицу через SPOOL","date":"2021-03-20T08:40:14.217Z","slug":"export-data-to-sap-spool","author":{"name":"Roman A. Nosov","picture":"https://avatars3.githubusercontent.com/u/21103635?s=120&v=4","url":"https://github.com/JustAddAcid"},"content":"<p>Господа, м'сье абапье и прочие любители подглядывать за страданиями! Представляю вашему вниманию очередной результат танцев с бубенцами. Который в этот раз будет чуть менее бесполезным. И (быть может) сэкономит время какому-нибудь заблудившемуся <strong>SAP</strong>-кодерасту.</p>\n<p>Иногда хочется выть от боли, когда в очередной раз появляются требования выгрузки данных из стандартных или квази-стандартных отчетов SAP. Которые зачастую вообще не предусматривают какой-либо экспорт или расширение.</p>\n<p>Дальше будет <strong>ABAP</strong> и рассказывания о подноготной <strong>SAP ERP</strong>. Если у вас нет вуайеристских наклонностей или профессионального интереса в дальнейшем тексте, то рекомендую закрыть страницу, чтобы не испытать экзистенциальный ужас от полученной информации.</p>\n<p>Что ж, погружаемся, товарищи. Так сказать, пристегните ремни. Будет немного трясти <del>и пованивать</del>.</p>\n<p><img src=\"../assets/blog/export-data-to-sap-spool/dipping.jpg\" alt=\"Погружаемся!\"></p>\n<h2>Поехали.</h2>\n<p>Итак, представим ситуацию: Вы сидите, неспешно ковыряете код. И тут прилетает задача —  достать данные из древнего отчета, нарисованного в <strong>SAP Query</strong> через <strong>Report painter</strong>; их немного обработать и отдать в другой интерфейс.</p>\n<p>Казалось бы, что может быть сложного? Ну, например, всё. </p>\n<h3>SAP Query (далее SQ)</h3>\n<p>Это сраный <strong>SAP Query</strong>. Пользователь мышой натыкивает нужные ему поля и форму отчета, а на выходе получает готовый отчет. Софтина сама собирает ABAP-программу по конфигу. Класна? Нет. </p>\n<p>Каждая дальнейшая правка отчета в пользовательской морде пересобирает целиком <em>всё</em>. Более того, никто не гарантирует, что программа пересоберется с тем же техническим названием. Ну и при переезде правок по ландшафту дев-тест-прод -> будет генерироваться разное название.</p>\n<p><strong>Вывод:</strong> Вписаться в код отчета и вытащить данные перед их отображением —  не получится. Юзверь перезатрёт всё прямзавтра. А скорее всего —  вчера.</p>\n<p><img src=\"../assets/blog/export-data-to-sap-spool/userflow.jpg\" alt=\"userflow\"></p>\n<h3>Report Painter</h3>\n<p>Я нарвался на <em>\"не совсем классическое\"</em>  использование <strong>SQ</strong>! Данные выводятся не напрямую, а проходят через <em>\"прослойку отрисовщика\"</em> (Report Painter). И воспользоваться стандартным FM <strong>RSAQ_REMOTE_QUERY_CALL</strong>, увы, не выйдет. </p>\n<p>Т.к. для заданного отчета вообще нет таких параметров, как <em>\"имя запроса\"</em> и  <em>\"группа пользователей\"</em>. Просто н<strong>е</strong>чего подавать в аргументы функции.</p>\n<p><strong>Вывод:</strong> Увы, воспользоваться предусмотренными FM невозможно. </p>\n<h3>Это, мать вашу, не ALV</h3>\n<p>А жаль. При отображении, ALV-таблицы постят свои мета-(и не очень мета)данные в глобальный скоуп сессии пользователя. И оттуда элементарно вытащить что угодно. Например, вот так:</p>\n<div class=\"remark-highlight\"><pre class=\"language-abap\"><code class=\"language-abap\">cl_salv_bs_runtime_info<span class=\"token token-operator punctuation\">=></span>set<span class=\"token punctuation\">(</span> <span class=\"token keyword\">EXPORTING</span> <span class=\"token keyword\">display</span>  <span class=\"token operator\">=</span> abap_false  \n\t\t\t\t\t\t\t\t\t\tmetadata <span class=\"token operator\">=</span> abap_true  \n\t\t\t\t\t\t\t\t\t\t<span class=\"token keyword\">data</span>     <span class=\"token operator\">=</span> abap_true <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n\t\t\t\t\t\t\t\t\t\t\n<span class=\"token eol-comment comment\">\" submit report and return</span>\n\ncl_salv_bs_runtime_info<span class=\"token token-operator punctuation\">=></span>get_data_ref<span class=\"token punctuation\">(</span> <span class=\"token keyword\">IMPORTING</span> r_data <span class=\"token operator\">=</span> ro_data <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token eol-comment comment\">\" do with ro_data what you want</span>\n</code></pre></div>\n<h3>Не работает ... exporting list to memory</h3>\n<p>Необъяснимо, но факт. Несмотря на то, что SQ-отчеты де-факто рендерят стандартный лист!</p>\n<p>Попытка экспортировать таким способом просто подвешивает основной поток выполнения и ничего не делает. Чому? Об этом знает только аллах. </p>\n<div class=\"remark-highlight\"><pre class=\"language-abap\"><code class=\"language-abap\"><span class=\"token keyword\">submit</span> prog <span class=\"token keyword\">and</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">exporting</span> <span class=\"token keyword\">list</span> <span class=\"token keyword\">to</span> <span class=\"token keyword\">memory</span><span class=\"token punctuation\">.</span> <span class=\"token eol-comment comment\">\" not working</span>\n</code></pre></div>\n<h3>Но выход всегда есть</h3>\n<p><em>(особенно, если вы живёте достаточно высоко)</em></p>\n<p>Давайте подумаем, <strong>что может быть общего</strong> между матричными принтерами, и решением моей задачи? </p>\n<p><img src=\"../assets/blog/export-data-to-sap-spool/printer.jpeg\" alt=\"printer\"></p>\n<p>Да, теми самыми принтерами с рулоном ленты. Которые буквально печатают \"стуча\" по бумаге, как старые печатающие машинки. И которые могут использовать только <em>ASCII</em> символы. </p>\n<p><strong>А то</strong>, что <strong>SAP</strong> <em>(Эдакая древняя громадина)</em> из коробки поддерживает <em>ASCII</em>-фикацию и печать всех отчетов, которые отрисовываются \"стандартным\" способом. Так это же то, что мне нужно! Такой текст будет элементарно распарсить после получения.</p>\n<p>Достаточно дёрнуть печать отчета, и вовремя подхватить <em>ASCII</em>-фицированный документ кодом! Получается что-то вроде этого:</p>\n<p>Создаём фоновое задание, где будет выполняться рендеринг и попытка печати.</p>\n<div class=\"remark-highlight\"><pre class=\"language-abap\"><code class=\"language-abap\"><span class=\"token keyword\">CALL</span> <span class=\"token keyword\">FUNCTION</span> <span class=\"token string\">'JOB_OPEN'</span>\n  <span class=\"token keyword\">EXPORTING</span>\n    jobname          <span class=\"token operator\">=</span> kv_job_name\n  <span class=\"token keyword\">IMPORTING</span>\n    jobcount         <span class=\"token operator\">=</span> lv_jobcount<span class=\"token punctuation\">.</span>\n</code></pre></div>\n<p>Собираем параметры печати. Нам нужно попросить программу напечататься сразу же после выполнения, и не показывать никаких диалогов. </p>\n<div class=\"remark-highlight\"><pre class=\"language-abap\"><code class=\"language-abap\"><span class=\"token keyword\">CALL</span> <span class=\"token keyword\">FUNCTION</span> <span class=\"token string\">'GET_PRINT_PARAMETERS'</span>\n  <span class=\"token keyword\">EXPORTING</span>\n    list_name      <span class=\"token operator\">=</span> <span class=\"token string\">'TEST'</span>\n    list_text      <span class=\"token operator\">=</span> <span class=\"token string\">'SUBMIT this fucking program TO SAP-SPOOL'</span>\n    <span class=\"token keyword\">immediately</span>    <span class=\"token operator\">=</span> abap_true\n    no_dialog      <span class=\"token operator\">=</span> abap_true\n  <span class=\"token keyword\">IMPORTING</span>\n    out_parameters <span class=\"token operator\">=</span> ls_params\n    <span class=\"token keyword\">valid</span>          <span class=\"token operator\">=</span> lv_valid<span class=\"token punctuation\">.</span>\n</code></pre></div>\n<p>Вызываем программу в фоне со всеми собранными параметрами. Конструкция <strong>to sap-spool ... without spool</strong> нисколько сап не смущает. И вполне корректно отрабатывает. </p>\n<div class=\"remark-highlight\"><pre class=\"language-abap\"><code class=\"language-abap\"><span class=\"token keyword\">SUBMIT</span> program_technical_name <span class=\"token keyword\">USING</span> <span class=\"token keyword\">SELECTION-SET</span> <span class=\"token string\">'VAR1'</span> \n      <span class=\"token keyword\">TO</span> <span class=\"token keyword\">SAP-SPOOL</span> <span class=\"token keyword\">SPOOL</span> <span class=\"token keyword\">PARAMETERS</span> ls_params \n      <span class=\"token keyword\">WITHOUT</span> <span class=\"token keyword\">SPOOL</span> <span class=\"token keyword\">DYNPRO</span> \n      <span class=\"token keyword\">VIA</span> <span class=\"token keyword\">JOB</span> kv_job_name <span class=\"token keyword\">NUMBER</span> lv_jobcount \n      <span class=\"token keyword\">AND</span> <span class=\"token keyword\">RETURN</span><span class=\"token punctuation\">.</span>\n</code></pre></div>\n<p>Так, программу мы вызвали, теперь придется костылём дожидаться завершения фоновой задачи. Никаких ивентов и коллбэков тут нет. </p>\n<div class=\"remark-highlight\"><pre class=\"language-abap\"><code class=\"language-abap\"><span class=\"token eol-comment comment\">\" Костыль ожидания завершения асинхронной жобы</span>\n<span class=\"token keyword\">WHILE</span> ls_empty <span class=\"token keyword\">IS</span> <span class=\"token keyword\">INITIAL</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">WAIT</span> <span class=\"token keyword\">UP</span> <span class=\"token keyword\">TO</span> <span class=\"token number\">5</span> <span class=\"token keyword\">SECONDS</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">SINGLE</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> tbtco <span class=\"token keyword\">INTO</span> ls_empty <span class=\"token keyword\">WHERE</span> jobname <span class=\"token operator\">=</span> kv_job_name <span class=\"token keyword\">AND</span> jobcount <span class=\"token operator\">=</span> lv_jobcount <span class=\"token keyword\">AND</span> status <span class=\"token operator\">=</span> <span class=\"token string\">'F'</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">ENDWHILE</span><span class=\"token punctuation\">.</span>\n</code></pre></div>\n<p>Ну, собственно, всё. Фоновая задача завершена. В системе уже хранятся отрендеренные данные, и нам остаётся лишь их подхватить. </p>\n<div class=\"remark-highlight\"><pre class=\"language-abap\"><code class=\"language-abap\"><span class=\"token keyword\">SELECT</span> <span class=\"token keyword\">SINGLE</span> listident\n  <span class=\"token keyword\">FROM</span> tbtcp\n  <span class=\"token keyword\">INTO</span> lv_listident\n  <span class=\"token keyword\">WHERE</span> jobname <span class=\"token operator\">=</span> kv_job_name\n    <span class=\"token keyword\">AND</span> jobcount <span class=\"token operator\">=</span> lv_jobcount<span class=\"token punctuation\">.</span>\n \n<span class=\"token keyword\">CHECK</span> lv_listident <span class=\"token keyword\">IS</span> <span class=\"token keyword\">NOT</span> <span class=\"token keyword\">INITIAL</span><span class=\"token punctuation\">.</span>\n \nlv_rqident <span class=\"token operator\">=</span> lv_listident<span class=\"token punctuation\">.</span>\n \n<span class=\"token keyword\">CALL</span> <span class=\"token keyword\">FUNCTION</span> <span class=\"token string\">'RSPO_RETURN_ABAP_SPOOLJOB'</span>\n  <span class=\"token keyword\">EXPORTING</span>\n    rqident              <span class=\"token operator\">=</span> lv_rqident\n  <span class=\"token keyword\">TABLES</span>\n    <span class=\"token keyword\">buffer</span>               <span class=\"token operator\">=</span> lt_buffer<span class=\"token punctuation\">.</span>\n</code></pre></div>\n<p>В результате получаем внутрённюю таблицу <strong>lt_buffer</strong> из строк отчета. Её элементарно разбирать на куски, и вытаскивать нужные нам значения.</p>\n<p>Столбцы в такой таблице разделены символом вертикальной черты '|' и ничего не стоит распарсить поля по отдельности. </p>\n<p><a href=\"https://gist.github.com/JustAddAcid/450d4cd5f1069dbac61c3e842508b969\">Полный код на github gists здесь</a></p>\n<iframe frameborder=\"0\" style=\"border:none;width:100%;height:180px;\" width=\"100%\" height=\"180\" src=\"https://music.yandex.ru/iframe/#track/57987781/8763763\">Слушайте <a href='https://music.yandex.ru/album/8763763/track/57987781'>What the Fuck</a> — <a href='https://music.yandex.ru/artist/7756103'>RHODAMINE</a> на Яндекс.Музыке</iframe>\n<p><a href=\"/tags/abap\">#abap</a> <a href=\"/tags/%D1%82%D0%B0%D0%BD%D1%86%D1%8B_%D1%81_%D0%B1%D1%83%D0%B1%D0%BD%D0%BE%D0%BC\">#танцы<em>с</em>бубном</a></p>\n","ogImage":{"url":"/assets/blog/export-data-to-sap-spool/background.jpg"},"coverImage":"/assets/blog/export-data-to-sap-spool/background.jpg","issueId":"18"}},"__N_SSG":true}