{"pageProps":{"post":{"title":"Класс для удобного манипулирования датами в ABAP","date":"2020-05-24T14:15:07.322Z","slug":"zcl-date-abap","author":{"name":"Roman A. Nosov","picture":"https://avatars3.githubusercontent.com/u/21103635?s=120&v=4","url":"https://github.com/JustAddAcid"},"content":"<p>Настало время делиться своей болью и страданиями. Меня зовут Носов Роман, и, мне очень стыдно в этом признаться, но я <del>алкоголик</del> иногда пишу на <em>ABAP</em>, чтобы не умереть с голоду.</p>\n<p><strong>Для тех, кто в танке и никогда не слышал, что это такое:</strong> <em>ABAP</em> — это внутренний язык, на котором программируют (допиливают напильником) разные продукты от <em>SAP</em> . От допиливаний страдают, как сама система, так и программисты с пользователями. И всё действо со стороны больше напоминает истязания грешников в каком-нибудь круге ада по Данте.</p>\n<p>А <strong>SAP</strong> в свою очередь — <del>очень дорогая немецкая одинэска</del> компания которая делает ERP системы для крупных бизнесов.</p>\n<p>Как сказал неизвестный мудрец в комментариях на хабре:\n<img src=\"../assets/blog/zcl_date_abap/stalingrad.png\" alt=\"SAP — это месть Гитлера за Сталинград\"></p>\n<h2>И тут мне захотелось немного уменьшить градус боли (по части работы с датами)</h2>\n<h3>Для начала немного теории:</h3>\n<p>В <em>ABAP</em> для хранения даты встроен специальный тип данных — <em>DATS</em> (или сокращенно — <em>D</em>). Представляет он из себя строку из 8 символов, в которой хранится по порядку: год,месяц,день. </p>\n<p><strong>Например:</strong> '20190102' — это второе января 2019 года.</p>\n<p>Так же, для этого типа данных перегружены действия + и -. Которые отнимают и прибавляют дни к дате, или считают разницу в днях между двумя датами.</p>\n<div class=\"remark-highlight\"><pre class=\"language-abap\"><code class=\"language-abap\"><span class=\"token keyword\">DATA</span><span class=\"token punctuation\">:</span> lv_dats  <span class=\"token keyword\">TYPE</span> dats<span class=\"token punctuation\">,</span>\n      lv_dats2 <span class=\"token keyword\">TYPE</span> dats<span class=\"token punctuation\">,</span>\n      lv_int   <span class=\"token keyword\">TYPE</span> <span class=\"token keyword\">i</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token eol-comment comment\">\" -/+ между dats и int возвращает dats с отнятыми/прибавленными днями</span>\nlv_dats <span class=\"token operator\">=</span> <span class=\"token string\">'20190102'</span><span class=\"token punctuation\">.</span>\nlv_dats <span class=\"token operator\">=</span> lv_dats <span class=\"token operator\">-</span> <span class=\"token number\">5</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">WRITE</span> lv_dats<span class=\"token punctuation\">.</span> <span class=\"token eol-comment comment\">\" 28.12.2018</span>\n\n<span class=\"token eol-comment comment\">\" -/+ между dats и dats возвращает int — разница между датами в днях</span>\nlv_dats2 <span class=\"token operator\">=</span> <span class=\"token string\">'20190101'</span><span class=\"token punctuation\">.</span>\nlv_int <span class=\"token operator\">=</span> lv_dats2 <span class=\"token operator\">-</span> lv_dats<span class=\"token punctuation\">.</span> <span class=\"token eol-comment comment\">\" 01.01.2019 -  28.12.2018</span>\n<span class=\"token keyword\">WRITE</span> lv_int<span class=\"token punctuation\">.</span> <span class=\"token eol-comment comment\">\" 4</span>\n</code></pre></div>\n<p>Но что делать, если очень хочется сделать инкремент месяца (не + 30 дней, а именно получить то же число следующего месяца, независимо от длины месяца (28-31))?</p>\n<p>Для этого есть громоздкий функциональный модуль RP_CALC_DATE_IN_INTERVAL. Умеет складывать/отнимать годы/месяцы/дни и возвращает валидную дату. </p>\n<div class=\"remark-highlight\"><pre class=\"language-abap\"><code class=\"language-abap\"><span class=\"token keyword\">DATA</span><span class=\"token punctuation\">:</span> lv_dats  <span class=\"token keyword\">TYPE</span> dats<span class=\"token punctuation\">.</span>\n\nlv_dats <span class=\"token operator\">=</span> <span class=\"token string\">'20190215'</span><span class=\"token punctuation\">.</span> <span class=\"token eol-comment comment\">\" 15.02.2019</span>\n\n<span class=\"token keyword\">CALL</span> <span class=\"token keyword\">FUNCTION</span> <span class=\"token string\">'RP_CALC_DATE_IN_INTERVAL'</span>\n  <span class=\"token keyword\">EXPORTING</span>\n    <span class=\"token keyword\">date</span>      <span class=\"token operator\">=</span> lv_dats\n    days      <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    months    <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    signum    <span class=\"token operator\">=</span> <span class=\"token string\">'+'</span>\n    years     <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n  <span class=\"token keyword\">IMPORTING</span>\n    calc_date <span class=\"token operator\">=</span> lv_dats<span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">write</span> lv_dats<span class=\"token punctuation\">.</span> <span class=\"token eol-comment comment\">\" Искомое 15 марта</span>\n</code></pre></div>\n<p>Но вы точно хотите использовать в своих программах вот такие уродливые конструкции?</p>\n<p>Отдельным пунктиком следует упомянуть про развлечения программистов с красивым форматированием даты. Огромные полотна кода с выдёргиваниями подстрок из даты, и конкатенации в нормальном виде.\n<a href=\"https://www.erpworkbench.com/abap/date/date_format.htm\" title=\"Formatting SAP date field using ABAP\">Пример</a></p>\n<p>А если очень хочется вместо номера месяца видеть его название? Май, апрель....</p>\n<p>А если очень хочется видеть названия месяцев на том языке, на котором запущен SAP? :)\nОгромные просторы для танцев с бубном и изобретаний велосипедов!</p>\n<h2>Z* разработки в SAP — бесконечная фабрика велосипедов</h2>\n<p><img src=\"../assets/blog/zcl_date_abap/meme.jpg\" alt=\"worst programming language\"></p>\n<p>Итак, нам нужен класс, который мог инкапсулировать в себе стандартный dats, но предоставлять удобный <em>API</em> для работы с датами, максимально скрывая уродливость языка <em>ABAP</em>.</p>\n<p>Он должен уметь:</p>\n<ol>\n<li>Прибавлять дни/месяцы/годы к текущей дате</li>\n<li>Иметь адекватные геттеры/сеттеры для дней/месяцев/годов, скрывая работу с подстроками</li>\n<li>Получать названия месяцев на заданном языке</li>\n<li>Метод <em>to_string</em>, который возвращает строковое представление даты по заданной маске <em>(like printf)</em></li>\n</ol>\n<h2>Реализация:</h2>\n<p>Создаём класс. В его свойствах будем хранить:</p>\n<ol>\n<li>Язык, который будет передаваться в конструкторе — (по умолчанию — язык системы)</li>\n<li>Дата, которая аналогично будет передаваться в конструкторе — (по умолчанию — текущая)</li>\n<li>Таблица названий месяцев для выбранного пользователем языка</li>\n<li>Константы для метода to_string( )</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-abap\"><code class=\"language-abap\"><span class=\"token keyword\">DATA</span><span class=\"token punctuation\">:</span>\n    gt_month_names <span class=\"token keyword\">TYPE</span> <span class=\"token keyword\">STANDARD</span> <span class=\"token keyword\">TABLE</span> <span class=\"token keyword\">OF</span> t247 <span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">DATA</span> gv_language <span class=\"token keyword\">TYPE</span> lang <span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">DATA</span> gv_date <span class=\"token keyword\">TYPE</span> dats <span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">CONSTANTS</span> nv_long_year <span class=\"token keyword\">TYPE</span> string <span class=\"token keyword\">VALUE</span> <span class=\"token string\">'$yyyy'</span><span class=\"token punctuation\">.</span>       \n  <span class=\"token keyword\">CONSTANTS</span> nv_short_year <span class=\"token keyword\">TYPE</span> string <span class=\"token keyword\">VALUE</span> <span class=\"token string\">'$yy'</span><span class=\"token punctuation\">.</span>        \n  <span class=\"token keyword\">CONSTANTS</span> nv_month_name <span class=\"token keyword\">TYPE</span> string <span class=\"token keyword\">VALUE</span> <span class=\"token string\">'$m'</span><span class=\"token punctuation\">.</span>         \n  <span class=\"token keyword\">CONSTANTS</span> nv_short_month_name <span class=\"token keyword\">TYPE</span> string <span class=\"token keyword\">VALUE</span> <span class=\"token string\">'$mmm'</span><span class=\"token punctuation\">.</span> \n  <span class=\"token keyword\">CONSTANTS</span> nv_month_number <span class=\"token keyword\">TYPE</span> string <span class=\"token keyword\">VALUE</span> <span class=\"token string\">'$mm'</span><span class=\"token punctuation\">.</span>      \n  <span class=\"token keyword\">CONSTANTS</span> nv_day <span class=\"token keyword\">TYPE</span> string <span class=\"token keyword\">VALUE</span> <span class=\"token string\">'$dd'</span><span class=\"token punctuation\">.</span>               \n</code></pre></div>\n<p><strong>Конструктор и статический метод create</strong></p>\n<div class=\"remark-highlight\"><pre class=\"language-abap\"><code class=\"language-abap\"><span class=\"token eol-comment comment\">\" Просто присваиваем значения </span>\n  <span class=\"token keyword\">METHOD</span> constructor<span class=\"token punctuation\">.</span>\n    gv_language <span class=\"token operator\">=</span> iv_language<span class=\"token punctuation\">.</span>\n    gv_date <span class=\"token operator\">=</span> iv_date<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">ENDMETHOD</span><span class=\"token punctuation\">.</span>\n\n  <span class=\"token keyword\">METHOD</span> <span class=\"token keyword\">create</span><span class=\"token punctuation\">.</span> <span class=\"token eol-comment comment\">\" Что-то отдалённо похожее на фабричный метод,</span>\n  <span class=\"token eol-comment comment\">\" только возвращаем инстанс самого класса zcl_date. </span>\n  <span class=\"token eol-comment comment\">\" Таким образом избавляемся от громоздкой конструкции create object*</span>\n  \n    <span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">OBJECT</span> ro_instance\n      <span class=\"token keyword\">EXPORTING</span>\n        iv_date     <span class=\"token operator\">=</span> iv_date\n        iv_language <span class=\"token operator\">=</span> iv_language<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">ENDMETHOD</span><span class=\"token punctuation\">.</span>\n</code></pre></div>\n<p>Прибавлять и вычитать будем уже известным функциональным модулем <em>RP_CALC_DATE_IN_INTERVAL</em>, но спрячем его поглубже, чтобы не было так страшно. Наружу (public) будут торчать два минималистичных метода: plus/minus</p>\n<div class=\"remark-highlight\"><pre class=\"language-abap\"><code class=\"language-abap\"><span class=\"token keyword\">METHOD</span> date_calculation<span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">CALL</span> <span class=\"token keyword\">FUNCTION</span> <span class=\"token string\">'RP_CALC_DATE_IN_INTERVAL'</span>\n      <span class=\"token keyword\">EXPORTING</span>\n        <span class=\"token keyword\">date</span>      <span class=\"token operator\">=</span> gv_date\n        days      <span class=\"token operator\">=</span> iv_days\n        months    <span class=\"token operator\">=</span> iv_months\n        signum    <span class=\"token operator\">=</span> iv_sign\n        years     <span class=\"token operator\">=</span> iv_years\n      <span class=\"token keyword\">IMPORTING</span>\n        calc_date <span class=\"token operator\">=</span> gv_date<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">ENDMETHOD</span><span class=\"token punctuation\">.</span>\n\n  <span class=\"token keyword\">METHOD</span> minus<span class=\"token punctuation\">.</span>\n    date_calculation<span class=\"token punctuation\">(</span> iv_days   <span class=\"token operator\">=</span> iv_days\n                      iv_months <span class=\"token operator\">=</span> iv_months\n                      iv_years  <span class=\"token operator\">=</span> iv_years\n                      iv_sign   <span class=\"token operator\">=</span> <span class=\"token string\">'-'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">ENDMETHOD</span><span class=\"token punctuation\">.</span>\n\n  <span class=\"token keyword\">METHOD</span> plus<span class=\"token punctuation\">.</span>\n    date_calculation<span class=\"token punctuation\">(</span> iv_days   <span class=\"token operator\">=</span> iv_days\n                      iv_months <span class=\"token operator\">=</span> iv_months\n                      iv_years  <span class=\"token operator\">=</span> iv_years\n                      iv_sign   <span class=\"token operator\">=</span> <span class=\"token string\">'+'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">ENDMETHOD</span><span class=\"token punctuation\">.</span>\n</code></pre></div>\n<p>Получать названия месяцев на текущем языке будем с помощью ФМ <em>MONTH_NAMES_GET</em>, который будем дёргать тогда, когда осознаем, что для этого языка у нас нет названий.</p>\n<div class=\"remark-highlight\"><pre class=\"language-abap\"><code class=\"language-abap\"><span class=\"token keyword\">METHOD</span> init_month_names<span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">CALL</span> <span class=\"token keyword\">FUNCTION</span> <span class=\"token string\">'MONTH_NAMES_GET'</span>\n      <span class=\"token keyword\">EXPORTING</span>\n        <span class=\"token keyword\">language</span>              <span class=\"token operator\">=</span> gv_language\n      <span class=\"token keyword\">TABLES</span>\n        month_names           <span class=\"token operator\">=</span> gt_month_names\n      <span class=\"token keyword\">EXCEPTIONS</span>\n        month_names_not_found <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n        <span class=\"token keyword\">OTHERS</span>                <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">ENDMETHOD</span><span class=\"token punctuation\">.</span>\n\n  <span class=\"token keyword\">METHOD</span> get_month_name_by_number<span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">DATA</span> ls_month <span class=\"token keyword\">LIKE</span> <span class=\"token keyword\">LINE</span> <span class=\"token keyword\">OF</span> gt_month_names<span class=\"token punctuation\">.</span>\n  \n    <span class=\"token eol-comment comment\">\" Есть ли вообще записи для текущего языка?</span>\n    <span class=\"token keyword\">READ</span> <span class=\"token keyword\">TABLE</span> gt_month_names\n      <span class=\"token keyword\">INTO</span> ls_month\n      <span class=\"token keyword\">WITH</span> <span class=\"token keyword\">KEY</span> spras <span class=\"token operator\">=</span> gv_language<span class=\"token punctuation\">.</span>\n  \n    <span class=\"token keyword\">IF</span> sy<span class=\"token token-operator punctuation\">-</span>subrc <span class=\"token operator\">&#x3C;></span> <span class=\"token number\">0</span><span class=\"token punctuation\">.</span>\n      init_month_names<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">ENDIF</span><span class=\"token punctuation\">.</span>\n  \n    <span class=\"token keyword\">CLEAR</span> ls_month<span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">READ</span> <span class=\"token keyword\">TABLE</span> gt_month_names\n      <span class=\"token keyword\">INTO</span> ls_month\n      <span class=\"token keyword\">WITH</span> <span class=\"token keyword\">KEY</span>\n        mnr   <span class=\"token operator\">=</span> iv_number\n        spras <span class=\"token operator\">=</span> gv_language<span class=\"token punctuation\">.</span>\n  \n    rv_month_name <span class=\"token operator\">=</span> ls_month<span class=\"token token-operator punctuation\">-</span>ltx<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">ENDMETHOD</span><span class=\"token punctuation\">.</span>\n</code></pre></div>\n<p>Ну и метод to_string( ). Который заменяет ключевые слова в маске значениями.</p>\n<div class=\"remark-highlight\"><pre class=\"language-abap\"><code class=\"language-abap\"><span class=\"token keyword\">METHOD</span> to_string<span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">DATA</span><span class=\"token punctuation\">:</span>\n      lv_day              <span class=\"token keyword\">TYPE</span> num2<span class=\"token punctuation\">,</span>\n      lv_month_name       <span class=\"token keyword\">TYPE</span> string<span class=\"token punctuation\">,</span>\n      lv_month_number     <span class=\"token keyword\">TYPE</span> num2<span class=\"token punctuation\">,</span>\n      lv_short_month_name <span class=\"token keyword\">TYPE</span> string<span class=\"token punctuation\">,</span>\n      lv_short_year       <span class=\"token keyword\">TYPE</span> num2<span class=\"token punctuation\">,</span>\n      lv_long_year        <span class=\"token keyword\">TYPE</span> num4<span class=\"token punctuation\">.</span>\n\n    lv_day <span class=\"token operator\">=</span> get_day<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n    lv_month_name <span class=\"token operator\">=</span> get_month_name<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n    lv_month_number <span class=\"token operator\">=</span> get_month_number<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n    lv_short_month_name <span class=\"token operator\">=</span> get_short_month_name<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n    lv_short_year <span class=\"token operator\">=</span> get_short_year<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n    lv_long_year <span class=\"token operator\">=</span> get_year<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n\n    <span class=\"token eol-comment comment\">\" year</span>\n    <span class=\"token keyword\">REPLACE</span> <span class=\"token keyword\">ALL</span> <span class=\"token keyword\">OCCURRENCES</span> <span class=\"token keyword\">OF</span> nv_long_year <span class=\"token keyword\">IN</span> iv_format <span class=\"token keyword\">WITH</span> lv_long_year <span class=\"token keyword\">IGNORING</span> <span class=\"token keyword\">CASE</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">REPLACE</span> <span class=\"token keyword\">ALL</span> <span class=\"token keyword\">OCCURRENCES</span> <span class=\"token keyword\">OF</span> nv_short_year <span class=\"token keyword\">IN</span> iv_format <span class=\"token keyword\">WITH</span> lv_short_year <span class=\"token keyword\">IGNORING</span> <span class=\"token keyword\">CASE</span><span class=\"token punctuation\">.</span>\n\n    <span class=\"token eol-comment comment\">\" month</span>\n    <span class=\"token keyword\">REPLACE</span> <span class=\"token keyword\">ALL</span> <span class=\"token keyword\">OCCURRENCES</span> <span class=\"token keyword\">OF</span> nv_short_month_name <span class=\"token keyword\">IN</span> iv_format <span class=\"token keyword\">WITH</span> lv_short_month_name <span class=\"token keyword\">IGNORING</span> <span class=\"token keyword\">CASE</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">REPLACE</span> <span class=\"token keyword\">ALL</span> <span class=\"token keyword\">OCCURRENCES</span> <span class=\"token keyword\">OF</span> nv_month_number <span class=\"token keyword\">IN</span> iv_format <span class=\"token keyword\">WITH</span> lv_month_number <span class=\"token keyword\">IGNORING</span> <span class=\"token keyword\">CASE</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">REPLACE</span> <span class=\"token keyword\">ALL</span> <span class=\"token keyword\">OCCURRENCES</span> <span class=\"token keyword\">OF</span> nv_month_name <span class=\"token keyword\">IN</span> iv_format <span class=\"token keyword\">WITH</span> lv_month_name <span class=\"token keyword\">IGNORING</span> <span class=\"token keyword\">CASE</span><span class=\"token punctuation\">.</span>\n\n    <span class=\"token eol-comment comment\">\"day</span>\n    <span class=\"token keyword\">REPLACE</span> <span class=\"token keyword\">ALL</span> <span class=\"token keyword\">OCCURRENCES</span> <span class=\"token keyword\">OF</span> nv_day <span class=\"token keyword\">IN</span> iv_format <span class=\"token keyword\">WITH</span> lv_day <span class=\"token keyword\">IGNORING</span> <span class=\"token keyword\">CASE</span><span class=\"token punctuation\">.</span>\n\n    rv_string <span class=\"token operator\">=</span> iv_format<span class=\"token punctuation\">.</span>\n  <span class=\"token keyword\">ENDMETHOD</span><span class=\"token punctuation\">.</span>\n</code></pre></div>\n<p>Осталось прикрутить геттеры/сеттеры. и доработать API.</p>\n<p>Что в итоге получилось — можно посмотреть здесь: <a href=\"https://github.com/JustAddAcid/abap_date/\" title=\"Класс для удобного использования даты в abap\">github.com/JustAddAcid/abap_date</a></p>\n<h2>Результаты</h2>\n<ol>\n<li>Минималистичные методы plus/minus</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-abap\"><code class=\"language-abap\">lo_date <span class=\"token operator\">=</span> zcl_date<span class=\"token token-operator punctuation\">=></span>create<span class=\"token punctuation\">(</span> <span class=\"token string\">'20200101'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span> <span class=\"token eol-comment comment\">\" 01.01.2020</span>\n\nlo_date<span class=\"token token-operator punctuation\">-></span>minus<span class=\"token punctuation\">(</span> iv_years <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span> <span class=\"token eol-comment comment\">\" 01.01.2018</span>\nlo_date<span class=\"token token-operator punctuation\">-></span>plus<span class=\"token punctuation\">(</span> iv_days <span class=\"token operator\">=</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>   <span class=\"token eol-comment comment\">\"04.01.2018</span>\nlo_date<span class=\"token token-operator punctuation\">-></span>plus<span class=\"token punctuation\">(</span> iv_months <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span> <span class=\"token eol-comment comment\">\"04.02.2018</span>\n\n<span class=\"token eol-comment comment\">\" Несколько аргументов</span>\nlo_date<span class=\"token token-operator punctuation\">-></span>plus<span class=\"token punctuation\">(</span> \n    iv_days  <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n    iv_years <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span> <span class=\"token eol-comment comment\">\" 05.02.2020</span>\n</code></pre></div>\n<ol start=\"2\">\n<li>Геттеры/сеттеры</li>\n<li>Метод get_month_name( ), получающий названия месяца</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-abap\"><code class=\"language-abap\"><span class=\"token keyword\">data</span><span class=\"token punctuation\">:</span> lo_date  <span class=\"token keyword\">type</span> <span class=\"token keyword\">ref</span> <span class=\"token keyword\">to</span> zcl_date<span class=\"token punctuation\">,</span>\n      lv_dats  <span class=\"token keyword\">type</span> dats<span class=\"token punctuation\">,</span>\n      lv_month <span class=\"token keyword\">type</span> string<span class=\"token punctuation\">.</span>\n\nlo_date <span class=\"token operator\">=</span> zcl_date<span class=\"token token-operator punctuation\">=></span>create<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\nlo_date<span class=\"token token-operator punctuation\">-></span>set_year<span class=\"token punctuation\">(</span> <span class=\"token number\">2001</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\nlo_date<span class=\"token token-operator punctuation\">-></span>set_month_number<span class=\"token punctuation\">(</span> <span class=\"token number\">9</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\nlo_date<span class=\"token token-operator punctuation\">-></span>set_day<span class=\"token punctuation\">(</span> <span class=\"token number\">11</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n\nlv_dats <span class=\"token operator\">=</span> lo_date<span class=\"token token-operator punctuation\">-></span>get_date<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\nlv_month <span class=\"token operator\">=</span> lo_date<span class=\"token token-operator punctuation\">-></span>get_month_name<span class=\"token punctuation\">(</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">write</span> lv_dats<span class=\"token punctuation\">.</span> <span class=\"token eol-comment comment\">\" 11 сентября 2001</span>\n<span class=\"token keyword\">write</span> lv_month<span class=\"token punctuation\">.</span> <span class=\"token eol-comment comment\">\" Сентябрь</span>\n</code></pre></div>\n<ol start=\"4\">\n<li>Метод to_string( ), возвращающий строковое представление даты по маске</li>\n</ol>\n<div class=\"remark-highlight\"><pre class=\"language-abap\"><code class=\"language-abap\"><span class=\"token keyword\">data</span><span class=\"token punctuation\">:</span> lo_date     <span class=\"token keyword\">type</span> <span class=\"token keyword\">ref</span> <span class=\"token keyword\">to</span> zcl_date<span class=\"token punctuation\">,</span>\n      lv_formated <span class=\"token keyword\">type</span> string<span class=\"token punctuation\">.</span>\n\nlo_date <span class=\"token operator\">=</span> zcl_date<span class=\"token token-operator punctuation\">=></span>create<span class=\"token punctuation\">(</span> <span class=\"token string\">'20200101'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span> <span class=\"token eol-comment comment\">\" 01.01.2020</span>\nlv_formated <span class=\"token operator\">=</span> lo_date<span class=\"token token-operator punctuation\">-></span>to_string<span class=\"token punctuation\">(</span> <span class=\"token string\">'Месяц: $m Год: $yyyy День: $dd'</span> <span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">write</span> lv_formated<span class=\"token punctuation\">.</span> <span class=\"token eol-comment comment\">\" Месяц: Январь Год: 2020 День: 01</span>\n</code></pre></div>\n<p><a href=\"/tags/abap\">#abap</a> </p>\n","ogImage":{"url":"/assets/blog/zcl_date_abap/cover.png"},"coverImage":"/assets/blog/zcl_date_abap/cover.png","issueId":"8"}},"__N_SSG":true}