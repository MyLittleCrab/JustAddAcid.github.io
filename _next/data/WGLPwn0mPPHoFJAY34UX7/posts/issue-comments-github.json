{"pageProps":{"post":{"title":"Использование issues в GitHub как движок комментариев","date":"2020-05-04T14:15:07.322Z","slug":"issue-comments-github","author":{"name":"Roman A. Nosov","picture":"https://avatars3.githubusercontent.com/u/21103635?s=120&v=4","url":"https://github.com/JustAddAcid"},"content":"<p>Хочу поделиться замечательной идеей: превращения <strong>GitHub issues</strong> в полноценный движок комментариев для статического блога. Достойная легковесная (и бесплатная!) замена <em>disqus</em> и аналогов.\nДля начала, маленькая вводная, с чего всё начиналось:</p>\n<p>Был скучный выходной день во время карантина и я лениво читал интернеты в поисках удобного движка комментариев для своего блога. Я уже был готов поддаться маркетингу disqus'a, но внезапно наткнулся на интересную статью:</p>\n<p>(<a href=\"http://donw.io/post/github-comments/\">http://donw.io/post/github-comments/</a>)</p>\n<p>В ней автор анализирует трафик своего сайта и приходит к удручающему выводу: <em>disqus</em> настолько активно использует трекеры и прочие запросы на сервер, что в примере автора, увеличивал количество XHR-запросов с 16 до 105! Это совершенно неприемлемо. И в качестве альтернативы, рассказчик предлагает переход к ... GitHub Issues! </p>\n<p>В статье прелагается следующая схема:</p>\n<ol>\n<li>На каждый пост в блоге открывается <em>issue в GitHub</em></li>\n<li>Все комментарии создаются непосредственно на сайте <em>GitHub</em></li>\n<li>При открытии страницы, клиентский JavaScript код получает все комментарии из issue через <em>issue API</em></li>\n</ol>\n<h2>Заводим свой <del>трактор</del> велосипед</h2>\n<p><img src=\"../assets/blog/issue-comments-github/%D0%BD%D0%BE_%D0%B7%D0%B0%D1%87%D0%B5%D0%BC.png\" alt=\"Возможно всё, но зачем?\"></p>\n<p>И тут я подумал, что раз уж весь мой блог использует <em>GitHub Pages</em> в качестве хостинга, то почему бы не попробовать ещё больше интегрироваться в экосистему гитхаба?</p>\n<h3>Предварительный алгоритм работы с комментариями (пока я не автоматизировал деплой):</h3>\n<ol>\n<li>Перед созданием поста, руками создаётся issue, оттуда копируется ID и вставляется в .md-темплейт поста.</li>\n<li>В исходники страницы добавлен маленький скрипт, который подхватывает этот id страницы и по нему (через Github API получает все комментарии (отрендеренный markdown в html)</li>\n<li>Рендер комментариев. </li>\n<li>Добавление кнопки \"создать комментарий\", который просто перебрасывает пользователя на страницу GitHub</li>\n</ol>\n<h3>Реализация</h3>\n<p>Поскольку я храню все посты на этом сайте в markdown файлах, мне первым делом нужно запомнить, что при создании файла, в метаданных я теперь буду обязан указывать issue id.</p>\n<div class=\"remark-highlight\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">{</span>\n    title<span class=\"token operator\">:</span> <span class=\"token string\">'Первый пост с использованием markdown и next js'</span>\n    excerpt<span class=\"token operator\">:</span> <span class=\"token string\">'А заодно и проверка возможности писать на кириллице в этом шаблонизаторе. Если вы читаете этот текст, значит полет нормальный.'</span>\n    coverImage<span class=\"token operator\">:</span> <span class=\"token string\">'/assets/blog/hello-world/завтра_будет_лучше.jpg'</span>\n    date<span class=\"token operator\">:</span> <span class=\"token string\">'2020-05-03T21:00:07.322Z'</span>\n    issueId<span class=\"token operator\">:</span> <span class=\"token string\">'1'</span> <span class=\"token comment\">// &#x3C;--- id созданного issue на GitHub</span>\n<span class=\"token punctuation\">}</span> \n</code></pre></div>\n<p>В конец страницы с постом добавлен React-компонент Comments, который будет отображать комментарии из ГитХаба. </p>\n<div class=\"remark-highlight\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>article</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;</span>Comments</span> \n            <span class=\"token attr-name\">githubUser</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>JustAddAcid<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\">githubRepo</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>JustAddAcid.github.io<span class=\"token punctuation\">\"</span></span>\n            <span class=\"token attr-name\">issueId</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>{post.issueId}</span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&#x3C;/</span>article</span><span class=\"token punctuation\">></span></span>\n</code></pre></div>\n<p>Внутри компонента <strong>Comments</strong> делаем GET-запрос в <a href=\"https://api.github.com/repos/\">https://api.github.com/repos/</a> ${githubUser}/ ${githubRepo}/issues/ ${issueId}/comments. Например, для комментариев к этой странице, это будет:</p>\n<p>(<a href=\"https://api.github.com/repos/\">https://api.github.com/repos/</a> JustAddAcid/JustAddAcid.github.io/ issues/2/comments)</p>\n<div class=\"remark-highlight\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">state</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">data</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> githubUser <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">props</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">githubUser</span>\n        <span class=\"token keyword\">const</span> githubRepo <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">props</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">githubRepo</span>\n        <span class=\"token keyword\">const</span> issueId <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">props</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">issueId</span>\n\n        <span class=\"token keyword\">const</span> that <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">;</span>\n        <span class=\"token dom variable\">window</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">https://api.github.com/repos/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>githubUser<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>githubRepo<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/issues/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>issueId<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/comments</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n            headers<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                <span class=\"token maybe-class-name\">Accept</span><span class=\"token operator\">:</span> <span class=\"token string\">'application/vnd.github.v3.html+json'</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span> <span class=\"token arrow operator\">=></span> response<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">.</span><span class=\"token method function property-access\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">comments</span> <span class=\"token arrow operator\">=></span> that<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n                data<span class=\"token operator\">:</span> comments<span class=\"token punctuation\">,</span>\n                isLoading<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>Ну и красиво рендерим JSON-array, который нам пришел из гитхаба</p>\n<div class=\"remark-highlight\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// ....</span>\n        <span class=\"token punctuation\">{</span>hasData <span class=\"token operator\">&#x26;&#x26;</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">state</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">data</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">comment</span> <span class=\"token arrow operator\">=></span> <span class=\"token punctuation\">(</span>\n                <span class=\"token operator\">&#x3C;</span><span class=\"token maybe-class-name\">Comment</span>\n                    key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>comment<span class=\"token punctuation\">.</span><span class=\"token property-access\">id</span><span class=\"token punctuation\">}</span>\n                    avatarUrl<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>comment<span class=\"token punctuation\">.</span><span class=\"token property-access\">user</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">avatar_url</span><span class=\"token punctuation\">}</span>\n                    userProfileUrl<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>comment<span class=\"token punctuation\">.</span><span class=\"token property-access\">user</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">html_url</span><span class=\"token punctuation\">}</span>\n                    userLogin<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>comment<span class=\"token punctuation\">.</span><span class=\"token property-access\">user</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">login</span><span class=\"token punctuation\">}</span>\n                    commentDate<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>comment<span class=\"token punctuation\">.</span><span class=\"token property-access\">created_at</span><span class=\"token punctuation\">}</span>\n                    commentBody<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>comment<span class=\"token punctuation\">.</span><span class=\"token property-access\">body_html</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&#x3C;</span><span class=\"token maybe-class-name\">LinkButton</span> text<span class=\"token operator\">=</span><span class=\"token string\">\"Добавить комментарий\"</span> link<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">https://github.com/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>githubUser<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>githubRepo<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/issues/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>issueId<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>После причесывания стилей — получаем достаточно минималистичную и приятную на глаз систему комментариев с поддержкой markdown, цитирования и т.д., которой можно воспользоваться внизу страницы.</p>\n<p>Ещё увидимся.</p>\n<p><a href=\"/tags/%D1%82%D0%B0%D0%BD%D1%86%D1%8B_%D1%81_%D0%B1%D1%83%D0%B1%D0%BD%D0%BE%D0%BC\">#танцы<em>с</em>бубном</a> <a href=\"/tags/javascript\">#javascript</a> </p>\n","ogImage":{"url":"/assets/blog/issue-comments-github/cover.png"},"coverImage":"/assets/blog/issue-comments-github/cover.png","issueId":"2"}},"__N_SSG":true}